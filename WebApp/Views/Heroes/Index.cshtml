@model PagingListAsync<Data.Models.Heroes.Superhero>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    CancellationToken token = CancellationToken.None;
}

<h1>Super Heros</h1>

<p>
    <a asp-action="Create">Create New</a>
    <a asp-action="Powers">Super powers</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
               Superhero name
            </th>
            <th>
                Full name
            </th>
            <th>
                Height (cm)
            </th>
            <th>
                Weight (kg)
            </th>
            <th>Details</th>
        </tr>
    </thead>
    <tbody>
@await foreach (var item in Model.Data) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.SuperheroName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HeightCm)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WeightKg)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">View</a> |
            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="Heroes page navigation">
    <ul class="pagination">
        @if (!Model.IsFirst)
        {
        <li class="page-item">
            <a class="page-link"
               asp-controller="Heroes"
               asp-action="Index"
               asp-route-page="1"
               asp-route-size="@Model.Size">
                First
            </a>
        </li>
        }
        else
        {
        <li class="page-item disabled">
            <a class="page-link">First</a>
        </li>
        }

        @if (Model.IsPrevious)
        {
        <li class="page-item">
            <a class="page-link"
               asp-controller="Heroes"
               asp-action="Index"
               asp-route-page="@(Model.Page - 1)"
               asp-route-size="@Model.Size">
                Previous
            </a>
        </li>
        }
        else
        {
        <li class="page-item disabled">
            <a class="page-link">Previous</a>
        </li>
        }

        @{
        int startPage = Math.Max(1, Model.Page - 2);
        int endPage = Math.Min(Model.TotalPages, Model.Page + 2);
        }

        @if (startPage > 1)
        {
        <li class="page-item">
            <a class="page-link"
               asp-controller="Heroes"
               asp-action="Index"
               asp-route-page="1"
               asp-route-size="@Model.Size">
                1
            </a>
        </li>
        @if (startPage > 2)
        {
        <li class="page-item disabled">
            <a class="page-link">...</a>
        </li>
        }
        }

        @for (int i = startPage; i <= endPage; i++)
        {
        if (i == Model.Page)
        {
        <li class="page-item active">
            <a class="page-link">@i</a>
        </li>
        }
        else
        {
        <li class="page-item">
            <a class="page-link"
               asp-controller="Heroes"
               asp-action="Index"
               asp-route-page="@i"
               asp-route-size="@Model.Size">
                @i
            </a>
        </li>
        }
        }

        @if (endPage < Model.TotalPages)
        {
        @if (endPage < Model.TotalPages - 1)
        {
        <li class="page-item disabled">
            <a class="page-link">...</a>
        </li>
        }
        <li class="page-item">
            <a class="page-link"
               asp-controller="Heroes"
               asp-action="Index"
               asp-route-page="@Model.TotalPages"
               asp-route-size="@Model.Size">
                @Model.TotalPages
            </a>
        </li>
        }

        @if (Model.IsNext)
        {
        <li class="page-item">
            <a class="page-link"
               asp-controller="Heroes"
               asp-action="Index"
               asp-route-page="@(Model.Page + 1)"
               asp-route-size="@Model.Size">
                Next
            </a>
        </li>
        }
        else
        {
        <li class="page-item disabled">
            <a class="page-link">Next</a>
        </li>
        }

        @if (!Model.IsLast)
        {
        <li class="page-item">
            <a class="page-link"
               asp-controller="Heroes"
               asp-action="Index"
               asp-route-page="@Model.TotalPages"
               asp-route-size="@Model.Size">
                Last
            </a>
        </li>
        }
        else
        {
        <li class="page-item disabled">
            <a class="page-link">Last</a>
        </li>
        }
    </ul>
</nav>
